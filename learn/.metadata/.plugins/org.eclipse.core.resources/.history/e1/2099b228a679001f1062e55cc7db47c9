package com.learnip.logger.controller;


import java.time.LocalDateTime;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import com.learnip.logger.entity.ClickLog;
import com.learnip.logger.model.UrlMapping;
import com.learnip.logger.repository.ClickLogRepository;
import com.learnip.logger.repository.UrlMappingRepository;
import com.learnip.logger.service.UrlService;

import jakarta.servlet.http.HttpServletRequest;



@Controller
@RequestMapping("/url")
public class UrlController {

    @Autowired
    private UrlService urlService;
    
    @Autowired
    private UrlMappingRepository urlMappingRepository;
    
    @Autowired
    private ClickLogRepository clickLogRepository;

       
    @GetMapping("/{shortenedUrl}")
    public String redirect(@PathVariable String shortenedUrl, HttpServletRequest request) {
        UrlMapping urlMapping = urlMappingRepository.findByShortenedUrl(shortenedUrl);
        if (urlMapping != null) {
            // Log the click with IP and user agent
            logClick(request, shortenedUrl);
            return "redirect:" + urlMapping.getOriginalUrl();
        }
        return "redirect:/error"; // Handle not found case
    }

    private void logClick(HttpServletRequest request, String shortenedUrl) {
        ClickLog clickLog = new ClickLog();
        clickLog.setShortenedUrl(shortenedUrl);
        clickLog.setIpAddress(request.getRemoteAddr());
        clickLog.setUserAgent(request.getHeader("User-Agent"));
        clickLog.setTimestamp(LocalDateTime.now());
        clickLog.setLatitude(0.0); // Set to actual GPS data if available
        clickLog.setLongitude(0.0); // Set to actual GPS data if available
        clickLogRepository.save(clickLog);
    }

    @PostMapping("/shorten")
    @ResponseBody
    public UrlMapping shortenUrl(@RequestParam String originalUrl,
                                  @RequestParam(required = false) Double lat,
                                  @RequestParam(required = false) Double lng) {
        UrlMapping urlMapping = urlService.shortenUrl(originalUrl);

        // Optionally store the location if you want
        if (lat != null && lng != null) {
            // Handle storing the GPS data if needed
        }
        
        return urlMapping;
    }


    // Other methods for logging, etc.
}

